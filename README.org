You Need a Budget (https://www.ynab.com/) does not have integrations with many Europe banks (e.g. Finland OP or SPankki) but there is atleast one free API that can grab data from them: GoCardless (https://gocardless.com/ formerly Nordigen).

This tool allows you to sync between your bank account (if it is supported by GoCardless) and upload transactions to YNAB on regular basis (e.g. crontab job could suffice). This is much better than converting CSVs from banks and upload it manually to YNAB on weekly basis.

Personally I started to use that in July 2023 for my main budget with OP and SPankki banks and not facing any issues anymore with it (have a separate cron job for each bank account that runs ~upload~ command 5 times per day).

* Before you start, disclaimer:
This tool is still in MVP state: developed poorly and fastest way possible. Alpha version I would say.

So these are things that may irritate you: 
- Too hard to start for a non-developer (getting all thise IDs is still manual)
- No proper packaging: docker is probably fine but has no way change date range properly (only by editing Dockerfile instead)
- poor error handling (there are a lot of cases when you *will* encounter hard to understand errors because of a random bug, unexpected API response, etc..)

Currently in order to use the tool you need atleast Python version 3.11.

You also need to obtain credentials:
- Secret ID and Secret Key from your GoCardless account (you can create one free of charge)
- YNAB access token (you can grab it from https://app.ynab.com/settings/developer)

* Quickstart

Clone this repository:
#+begin_src sh
git clone https://github.com/axeoman/ynab-sync.git
#+end_src

Install with pip:
#+begin_src sh
python -m pip install .
#+end_src

Go through quickstart script in order to obtain GoCardless Account ID and YNAB Budget and Account ID needed for ~ynab-sync upload~ to work:
#+begin_src sh
ynab-sync quickstart
#+end_src

Run suggested by script command to add environment variables (example):
#+begin_src sh
export GOCARDLESS_SECRET_ID=fa264...67322
export GOCARDLESS_SECRET_KEY=96d43...25200
export GOCARDLESS_COUNTRY=FI
export GOCARDLESS_ACCOUNT_ID=b62ca...fa9e2
export YNAB_TOKEN=D5rS4..SICe8
export YNAB_BUDGET_ID=6c4e2...bd8ad
export YNAB_ACCOUNT_ID=adf05...262e
#+end_src

You can use ~upload~ command now in order to download transactions from GoCardless Account and upload them to YNAB budget/account:

#+begin_src sh
ynab-sync upload --ynab-token=$YNAB_TOKEN --ynab-budget-id=$YNAB_BUDGET_ID --ynab-account-id=$YNAB_ACCOUNT_ID --gocardless-secret-id=$GOCARDLESS_SECRET_ID --gocardless-secret-key=$GOCARDLESS_SECRET_KEY --gocardless-account-id=$GOCARDLESS_ACCOUNT_ID --date-from=`date -d '-7 day' '+%Y-%m-%d'` 
#+end_src


** Commands

- ~ynab-sync upload~ - grabs transactions from GoCardless account for desired period and uploads it to YNAB. 
- ~ynab-sync quickstart~ - interactive CLI that will help you to get account/budgets id and configure GoCardless integration with your bank. Note! You need to run this once per bank connection.

If you curious you can also use those (~ynab-sync quickstart~ should be enough to start)  
- ~ynab-sync gocardless banks~ - list of banks that needed for next step (auth)
- ~ynab-sync gocardless generate_bank_auth_link~ - creates http link in order to auth with your bank 
- ~ynab-sync gocardless list_requisition_account~ - get GOCARDLESS_ACCOUNT_ID that is nessesary for ~upload~ command
- ~ynab-sync ~ynab budgets~ - lists budgets in your YNAB account (YNAB_BUDGET_ID)
- ~ynab-sync ynab accounts~ - lists accoutns in your YNAB budget (YNAB_ACCOUNT_ID)


** Docker usage
Probably fastest way to use it in any environment is to use docker container (that is how I currently use it for myself).

- clone this repository (or grab latest release if it's broken)
#+begin_src sh
git clone https://github.com/axeoman/ynab-sync.git
#+end_src
- Store you credentials in ~.env~ file e.g. ~sandbox.env~ ([[https://github.com/axeoman/ynab-sync/blob/main/bank.example.env][example]]) and run following commands
- Build docker container
#+begin_src
docker build -t ynab-sync .
#+end_src

- Run docker container. Note: it will grab all transactions from 7 days before current date (consult [[https://github.com/axeoman/ynab-sync/blob/main/Dockerfile][Dockerfile]] for details)
  
#+begin_src sh
docker run --env-file=sandbox.env --rm ynab-sync
#+end_src

** Getting budget and account ids


* Development
I have an e2e happy path test: feel free to submit a PR :)

** API Used
- GoCardless (Nordigen) API: https://developer.gocardless.com/bank-account-data/endpoints
- YNAB API: https://api.ynab.com/v1#/

** TODOs
- [X] MVP 
- [X] end-to-end automated tests based on results of MVP
- [X] separate cli from logic
- [ ] refactor API classes
- [X] add usefull commands (building links, getting GoCardless and YNAB account/budget information)
- [ ] add packaging
- [ ] add simple interactive command that provides you with .env file and all nessesary variables to get bank data

** Initial requirements
- Upload fresh bank transactions to YNAB
- Supported banks: OP, Spankki
- Should be stateless
- Runs a command (with appeal https://github.com/larryhastings/appeal) (can be used in cron):
   Params:
   - YNAB auth token
   - YNAB budget_id
   - YNAB account_id 
   - secrets from GoCardless
   - account_id / name of the bank insitution to upload
   - transactions time range
- Command should report number of imported and duplicated transactions
- Nice to have:
  - command that build authorization link (might be needed every 3 months)
  - command that provide budget_id/account_id information (list of available with name)

    
